services:
  postgres:
    image: postgres:15
    container_name: awesome-chat-postgres
    environment:
      POSTGRES_DB: awesome-chat-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - awesome-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: awesome-chat-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - awesome-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: awesome-chat-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_INIT_LIMIT: 3
      ZOOKEEPER_SYNC_LIMIT: 2
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-server:7.7.1
    hostname: kafka
    container_name: awesome-chat-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5

  migrations:
    build: .
    command: >
      sh -c "
      echo 'Waiting for PostgreSQL...';
      while ! nc -z postgres 5432; do sleep 1; done;
      echo 'Running migrations...';
      goose -dir ./migrations postgres 'postgres://postgres:postgres@localhost:5432/awesome-chat-db?sslmode=disable' up      echo 'Creating Kafka topics...';
      go run ./cmd/topic-creator/main.go 
      "
    depends_on: # migration -> change localhost to container name (postgres)
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - awesome-network

  api:
    build:
      context: .
      target: builder
    command: ["/app/api"]
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      CONFIG_PATH: ./configs/api/prod.yaml
      WAIT_FOR_IT: postgres:5432,kafka:9092
    volumes:
      - ./configs:/configs:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - awesome-network

  outbox-processor:
    build:
      context: .
      target: builder
    command: ["/app/outbox-processor"]
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      CONFIG_PATH: ./configs/outbox-processor/prod.yaml
    networks:
      - awesome-network

  ws-server:
    build:
      context: .
      target: builder
    command: ["/app/ws-server"]
    ports:
      - "8081:8081"
    depends_on:
      - api
    environment:
      CONFIG_PATH: ./configs/ws-server/prod.yaml
    networks:
      - awesome-network

volumes:
  pgdata:
    driver: local

networks:
  awesome-network:
    driver: bridge